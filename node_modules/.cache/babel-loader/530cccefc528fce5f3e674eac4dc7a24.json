{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Desktop/Web Development/projects/smart-brain/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  id: '',\n  name: '',\n  email: '',\n  entries: 0,\n  joined: ''\n};\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({ ...initialState\n  });\n\n  const clearState = () => {\n    setUser({ ...initialState\n    });\n    console.log('clearState has run. user state value-->', user);\n  };\n\n  useEffect(() => {\n    if (route === 'signin') {\n      clearState();\n    }\n  }, [route]);\n\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = box => {\n    setBox(box);\n  };\n\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    fetch('https://evening-fjord-21288.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: input\n      })\n    }).then(response => response.json()).then(response => {\n      if (response) {\n        fetch('https://evening-fjord-21288.herokuapp.com/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: user.id\n          })\n        }).then(response => response.json()).then(count => {\n          const newObj = Object.assign(user, {\n            entries: count\n          });\n          setUser(Object.assign({}, user, {\n            entries: newObj.entries\n          }));\n        }).catch(console.log);\n      }\n\n      displayFaceBox(calculateFaceLocation(response));\n    }).catch(err => console.log(err));\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signin') {\n      setIsSignedIn(false);\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      className: \"particles\",\n      params: particlesOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      onRouteChange: onRouteChange,\n      isSignedIn: isSignedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: user.name,\n        entries: user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonClick: onButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: imageUrl,\n        box: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+nZqtdYlE0YGUo3XonPWFuYuO0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Joey/Desktop/Web Development/projects/smart-brain/src/App.js"],"names":["React","useEffect","useState","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","particlesOptions","particles","number","value","density","enable","value_area","initialState","id","name","email","entries","joined","App","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","user","setUser","clearState","console","log","loadUser","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","onButtonClick","fetch","method","headers","body","JSON","stringify","then","response","json","count","newObj","Object","assign","catch","err","onRouteChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  id: '',\n  name: '',\n  email: '',\n  entries: 0,\n  joined: '',\n};\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({ ...initialState });\n\n  const clearState = () => {\n    setUser({ ...initialState });\n    console.log('clearState has run. user state value-->', user);\n  };\n\n  useEffect(() => {\n    if (route === 'signin') {\n      clearState();\n    }\n  }, [route]);\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    });\n  };\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    setBox(box);\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    fetch('https://evening-fjord-21288.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch('https://evening-fjord-21288.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              const newObj = Object.assign(user, { entries: count });\n              setUser(Object.assign({}, user, { entries: newObj.entries }));\n            })\n            .catch(console.log);\n        }\n        displayFaceBox(calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onRouteChange = (route) => {\n    if (route === 'signin') {\n      setIsSignedIn(false);\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n    setRoute(route);\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={particlesOptions} />\n      <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n      {route === 'home' ? (\n        <div>\n          <Logo />\n          <Rank name={user.name} entries={user.entries} />\n          <ImageLinkForm\n            onInputChange={onInputChange}\n            onButtonClick={onButtonClick}\n          />\n          <FaceRecognition imageUrl={imageUrl} box={box} />\n        </div>\n      ) : route === 'signin' ? (\n        <Signin onRouteChange={onRouteChange} loadUser={loadUser} />\n      ) : (\n        <Register onRouteChange={onRouteChange} loadUser={loadUser} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}