{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Desktop/Web Development/projects/smart-brain/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'd6186f1a010f48c98f651ef226062c3f'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  });\n\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = box => {\n    setBox(box);\n  };\n\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, input).then(response => {\n      if (response.input) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: user.id\n          })\n        }).then(response => response.json()).then(count => {\n          const newObj = Object.assign(user, {\n            entries: count\n          });\n          setUser(Object.assign({}, user, {\n            entries: newObj.entries\n          }));\n          console.log(user);\n        });\n      }\n\n      displayFaceBox(calculateFaceLocation(response));\n    }).catch(err => console.log(err));\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signin') {\n      setIsSignedIn(false);\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      className: \"particles\",\n      params: particlesOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      onRouteChange: onRouteChange,\n      isSignedIn: isSignedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: user.name,\n        entries: user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonClick: onButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: imageUrl,\n        box: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zzu9qIKNV0xy+CS/YDeJUDzaI88=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Joey/Desktop/Web Development/projects/smart-brain/src/App.js"],"names":["React","useState","Particles","Clarifai","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","user","setUser","id","name","email","entries","joined","loadUser","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","onButtonClick","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","newObj","Object","assign","console","log","catch","err","onRouteChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'd6186f1a010f48c98f651ef226062c3f',\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n  });\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    });\n  };\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    setBox(box);\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, input)\n      .then((response) => {\n        if (response.input) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              const newObj = Object.assign(user, { entries: count });\n              setUser(Object.assign({}, user, { entries: newObj.entries }));\n              console.log(user);\n            });\n        }\n        displayFaceBox(calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onRouteChange = (route) => {\n    if (route === 'signin') {\n      setIsSignedIn(false);\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n    setRoute(route);\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={particlesOptions} />\n      <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n      {route === 'home' ? (\n        <div>\n          <Logo />\n          <Rank name={user.name} entries={user.entries} />\n          <ImageLinkForm\n            onInputChange={onInputChange}\n            onButtonClick={onButtonClick}\n          />\n          <FaceRecognition imageUrl={imageUrl} box={box} />\n        </div>\n      ) : route === 'signin' ? (\n        <Signin onRouteChange={onRouteChange} loadUser={loadUser} />\n      ) : (\n        <Register onRouteChange={onRouteChange} loadUser={loadUser} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}