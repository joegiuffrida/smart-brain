{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Desktop/Web Development/projects/facerecognitionbrain/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const app = new Clarifai.App({\n    apiKey: 'd6186f1a010f48c98f651ef226062c3f'\n  });\n\n  const calculateFaceLocation = data => {};\n\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, input).then(response => calculateFaceLocation(response)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      input,\n      imageUrl,\n      onInputChange,\n      onButtonClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"jcX3AUtM5tjS8FdVCSCe+OBNaRg=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/Joey/Desktop/Web Development/projects/facerecognitionbrain/src/context.js"],"names":["React","useState","useContext","Clarifai","AppContext","createContext","AppProvider","children","input","setInput","imageUrl","setImageUrl","box","setBox","app","App","apiKey","calculateFaceLocation","data","onInputChange","e","target","value","onButtonClick","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMa,GAAG,GAAG,IAAIX,QAAQ,CAACY,GAAb,CAAiB;AAC3BC,IAAAA,MAAM,EAAE;AADmB,GAAjB,CAAZ;;AAIA,QAAMC,qBAAqB,GAAIC,IAAD,IAAU,CAAE,CAA1C;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BZ,IAAAA,WAAW,CAACH,KAAD,CAAX;AACAM,IAAAA,GAAG,CAACU,MAAJ,CACGC,OADH,CACWtB,QAAQ,CAACuB,iBADpB,EACuClB,KADvC,EAEGmB,IAFH,CAESC,QAAD,IAAcX,qBAAqB,CAACW,QAAD,CAF3C,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GAND;;AAQA,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AAAEtB,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBS,MAAAA,aAAnB;AAAkCI,MAAAA;AAAlC,KADT;AAAA,cAGGhB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BD;;GAAMD,W;;KAAAA,W;AAgCN,OAAO,MAAM2B,gBAAgB,GAAG,MAAM;AAAA;;AACpC,SAAO/B,UAAU,CAACE,UAAD,CAAjB;AACD,CAFM;;IAAM6B,gB;;AAIb,eAAe3B,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Clarifai from 'clarifai';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n\n  const app = new Clarifai.App({\n    apiKey: 'd6186f1a010f48c98f651ef226062c3f',\n  });\n\n  const calculateFaceLocation = (data) => {};\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, input)\n      .then((response) => calculateFaceLocation(response))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <AppContext.Provider\n      value={{ input, imageUrl, onInputChange, onButtonClick }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}