{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Desktop/Web Development/projects/smart-brain/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nconst reducer = (user, action) => {\n  if (action.type === 'RESET') {\n    return defaultUser;\n  }\n\n  if (action.type === 'LOAD_USER') {\n    const data = action.payload;\n    return {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    };\n  }\n\n  if (action.type === 'ENTRIES') {\n    const newObj = action.payload;\n    return Object.assign({}, user, {\n      entries: newObj.entries\n    });\n  }\n\n  throw new Error('no matching action types');\n};\n\nconst defaultUser = {\n  id: '',\n  name: '',\n  email: '',\n  entries: 0,\n  joined: ''\n};\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false); // const [user, setUser] = useState({ ...initialState });\n\n  const [user, dispatch] = useReducer(reducer, defaultUser);\n\n  const clearState = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  const loadUser = data => {\n    dispatch({\n      type: 'LOAD_USER',\n      payload: data\n    });\n  }; // const loadUser = (data) => {\n  //   setUser({\n  //     id: data.id,\n  //     name: data.name,\n  //     email: data.email,\n  //     entries: data.entries,\n  //     joined: data.joined,\n  //   });\n  // };\n\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = box => {\n    setBox(box);\n  };\n\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    fetch('https://evening-fjord-21288.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: input\n      })\n    }).then(response => response.json()).then(response => {\n      if (response) {\n        fetch('https://evening-fjord-21288.herokuapp.com/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: user.id\n          })\n        }).then(response => response.json()).then(count => {\n          const newObj = Object.assign(user, {\n            entries: count\n          }); // setUser(Object.assign({}, user, { entries: newObj.entries }));\n\n          dispatch({\n            type: 'ENTRIES',\n            payload: newObj\n          });\n        }).catch(console.log);\n      }\n\n      displayFaceBox(calculateFaceLocation(response));\n    }).catch(err => console.log(err));\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signin') {\n      setIsSignedIn(false);\n      clearState(); // ***********delete this if it didnt work**********\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      className: \"particles\",\n      params: particlesOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      onRouteChange: onRouteChange,\n      isSignedIn: isSignedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: user.name,\n        entries: user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonClick: onButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: imageUrl,\n        box: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dHFnERQyt+vojMEKZ5wvY5pBnoA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Joey/Desktop/Web Development/projects/smart-brain/src/App.js"],"names":["React","useEffect","useState","useReducer","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","particlesOptions","particles","number","value","density","enable","value_area","reducer","user","action","type","defaultUser","data","payload","id","name","email","entries","joined","newObj","Object","assign","Error","App","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","dispatch","clearState","loadUser","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","onButtonClick","fetch","method","headers","body","JSON","stringify","then","response","json","count","catch","console","log","err","onRouteChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useReducer } from 'react';\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nconst reducer = (user, action) => {\n  if (action.type === 'RESET') {\n    return defaultUser;\n  }\n  if (action.type === 'LOAD_USER') {\n    const data = action.payload;\n    return {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    };\n  }\n  if (action.type === 'ENTRIES') {\n    const newObj = action.payload;\n    return Object.assign({}, user, { entries: newObj.entries });\n  }\n  throw new Error('no matching action types');\n};\n\nconst defaultUser = {\n  id: '',\n  name: '',\n  email: '',\n  entries: 0,\n  joined: '',\n};\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  // const [user, setUser] = useState({ ...initialState });\n\n  const [user, dispatch] = useReducer(reducer, defaultUser);\n\n  const clearState = () => {\n    dispatch({ type: 'RESET' });\n  };\n\n  const loadUser = (data) => {\n    dispatch({ type: 'LOAD_USER', payload: data });\n  };\n\n  // const loadUser = (data) => {\n  //   setUser({\n  //     id: data.id,\n  //     name: data.name,\n  //     email: data.email,\n  //     entries: data.entries,\n  //     joined: data.joined,\n  //   });\n  // };\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    setBox(box);\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    fetch('https://evening-fjord-21288.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch('https://evening-fjord-21288.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              const newObj = Object.assign(user, { entries: count });\n              // setUser(Object.assign({}, user, { entries: newObj.entries }));\n              dispatch({ type: 'ENTRIES', payload: newObj });\n            })\n            .catch(console.log);\n        }\n        displayFaceBox(calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onRouteChange = (route) => {\n    if (route === 'signin') {\n      setIsSignedIn(false);\n      clearState(); // ***********delete this if it didnt work**********\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n    setRoute(route);\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={particlesOptions} />\n      <Navigation onRouteChange={onRouteChange} isSignedIn={isSignedIn} />\n      {route === 'home' ? (\n        <div>\n          <Logo />\n          <Rank name={user.name} entries={user.entries} />\n          <ImageLinkForm\n            onInputChange={onInputChange}\n            onButtonClick={onButtonClick}\n          />\n          <FaceRecognition imageUrl={imageUrl} box={box} />\n        </div>\n      ) : route === 'signin' ? (\n        <Signin onRouteChange={onRouteChange} loadUser={loadUser} />\n      ) : (\n        <Register onRouteChange={onRouteChange} loadUser={loadUser} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}