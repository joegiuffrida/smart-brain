{"ast":null,"code":"var _jsxFileName = \"/Users/Joey/Desktop/Web Development/projects/facerecognitionbrain/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n  const app = new Clarifai.App({\n    apiKey: 'd6186f1a010f48c98f651ef226062c3f'\n  });\n\n  const calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = box => {\n    setBox(box);\n  };\n\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, input).then(response => displayFaceBox(calculateFaceLocation(response))).catch(err => console.log(err));\n  };\n\n  const onRouteChange = () => {\n    setRoute('home');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      input,\n      imageUrl,\n      onInputChange,\n      onButtonClick,\n      box,\n      route,\n      onRouteChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"HjxZ0+Wqgh+ewS5JW+g3gLBtSQg=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/Joey/Desktop/Web Development/projects/facerecognitionbrain/src/context.js"],"names":["React","useState","useContext","Clarifai","AppContext","createContext","AppProvider","children","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","app","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","value","onButtonClick","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,QAAD,CAAlC;AAEA,QAAMe,GAAG,GAAG,IAAIb,QAAQ,CAACc,GAAb,CAAiB;AAC3BC,IAAAA,MAAM,EAAE;AADmB,GAAjB,CAAZ;;AAIA,QAAMC,qBAAqB,GAAIC,IAAD,IAAU;AACtC,UAAMC,YAAY,GAChBD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAD9C;AAEA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,WAAO;AACLC,MAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD5B;AAELK,MAAAA,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAF1B;AAGLK,MAAAA,QAAQ,EAAEP,KAAK,GAAGR,YAAY,CAACgB,SAAb,GAAyBR,KAHtC;AAILS,MAAAA,SAAS,EAAEP,MAAM,GAAGV,YAAY,CAACkB,UAAb,GAA0BR;AAJzC,KAAP;AAMD,GAZD;;AAcA,QAAMS,cAAc,GAAI5B,GAAD,IAAS;AAC9BC,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAFD;;AAIA,QAAM6B,aAAa,GAAIC,CAAD,IAAO;AAC3BjC,IAAAA,QAAQ,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BlC,IAAAA,WAAW,CAACH,KAAD,CAAX;AACAQ,IAAAA,GAAG,CAAC8B,MAAJ,CACGC,OADH,CACW5C,QAAQ,CAAC6C,iBADpB,EACuCxC,KADvC,EAEGyC,IAFH,CAESC,QAAD,IAAcV,cAAc,CAACrB,qBAAqB,CAAC+B,QAAD,CAAtB,CAFpC,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GAND;;AAQA,QAAMG,aAAa,GAAG,MAAM;AAC1BxC,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,KADK;AAELE,MAAAA,QAFK;AAGL+B,MAAAA,aAHK;AAILI,MAAAA,aAJK;AAKLjC,MAAAA,GALK;AAMLE,MAAAA,KANK;AAOLyC,MAAAA;AAPK,KADT;AAAA,cAWGhD;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3DD;;GAAMD,W;;KAAAA,W;AA6DN,OAAO,MAAMkD,gBAAgB,GAAG,MAAM;AAAA;;AACpC,SAAOtD,UAAU,CAACE,UAAD,CAAjB;AACD,CAFM;;IAAMoD,gB;;AAIb,eAAelD,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Clarifai from 'clarifai';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState('signin');\n\n  const app = new Clarifai.App({\n    apiKey: 'd6186f1a010f48c98f651ef226062c3f',\n  });\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    setBox(box);\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onButtonClick = () => {\n    setImageUrl(input);\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, input)\n      .then((response) => displayFaceBox(calculateFaceLocation(response)))\n      .catch((err) => console.log(err));\n  };\n\n  const onRouteChange = () => {\n    setRoute('home');\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        input,\n        imageUrl,\n        onInputChange,\n        onButtonClick,\n        box,\n        route,\n        onRouteChange,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}