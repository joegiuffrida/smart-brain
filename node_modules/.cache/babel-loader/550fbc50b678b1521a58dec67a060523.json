{"ast":null,"code":"// import React, { useState, useContext } from 'react';\n// import Clarifai from 'clarifai';\n// const AppContext = React.createContext();\n// const AppProvider = ({ children }) => {\n//   const [input, setInput] = useState('');\n//   const [imageUrl, setImageUrl] = useState('');\n//   const [box, setBox] = useState({});\n//   const [route, setRoute] = useState('signin');\n//   const [isSignedIn, setIsSignedIn] = useState(false);\n//   const [user, setUser] = useState({\n//     id: '',\n//     name: '',\n//     email: '',\n//     entries: 0,\n//     joined: '',\n//   });\n//   const app = new Clarifai.App({\n//     apiKey: 'd6186f1a010f48c98f651ef226062c3f',\n//   });\n//   const calculateFaceLocation = (data) => {\n//     const clarifaiFace =\n//       data.outputs[0].data.regions[0].region_info.bounding_box;\n//     const image = document.getElementById('inputimage');\n//     const width = Number(image.width);\n//     const height = Number(image.height);\n//     return {\n//       leftCol: clarifaiFace.left_col * width,\n//       topRow: clarifaiFace.top_row * height,\n//       rightCol: width - clarifaiFace.right_col * width,\n//       bottomRow: height - clarifaiFace.bottom_row * height,\n//     };\n//   };\n//   const loadUser = (data) => {\n//     setUser({\n//       id: data.id,\n//       name: data.name,\n//       email: data.email,\n//       entries: data.entries,\n//       joined: data.joined,\n//     });\n//   };\n//   const displayFaceBox = (box) => {\n//     setBox(box);\n//   };\n//   const onInputChange = (e) => {\n//     setInput(e.target.value);\n//   };\n//   const onButtonClick = () => {\n//     setImageUrl(input);\n//     app.models\n//       .predict(Clarifai.FACE_DETECT_MODEL, input)\n//       .then((response) => {\n//         if (response) {\n//           fetch('http://localhost:3000/image', {\n//             method: 'put',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({\n//               id: user.id,\n//             }),\n//           })\n//             .then((response) => response.json())\n//             .then((count) => {\n//               setUser(Object.assign(user, { entries: count }));\n//               console.log(user);\n//             });\n//         }\n//         displayFaceBox(calculateFaceLocation(response));\n//       })\n//       .catch((err) => console.log(err));\n//   };\n//   const onRouteChange = (route) => {\n//     if (route === 'signin') {\n//       setIsSignedIn(false);\n//     } else if (route === 'home') {\n//       setIsSignedIn(true);\n//     }\n//     setRoute(route);\n//   };\n//   return (\n//     <AppContext.Provider\n//       value={{\n//         input,\n//         imageUrl,\n//         onInputChange,\n//         onButtonClick,\n//         box,\n//         route,\n//         setRoute,\n//         onRouteChange,\n//         isSignedIn,\n//         user,\n//         loadUser,\n//       }}\n//     >\n//       {children}\n//     </AppContext.Provider>\n//   );\n// };\n// export const useGlobalContext = () => {\n//   return useContext(AppContext);\n// };\n// export default AppProvider;","map":{"version":3,"sources":["/Users/Joey/Desktop/Web Development/projects/smart-brain/src/context.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useContext } from 'react';\n// import Clarifai from 'clarifai';\n\n// const AppContext = React.createContext();\n\n// const AppProvider = ({ children }) => {\n//   const [input, setInput] = useState('');\n//   const [imageUrl, setImageUrl] = useState('');\n//   const [box, setBox] = useState({});\n//   const [route, setRoute] = useState('signin');\n//   const [isSignedIn, setIsSignedIn] = useState(false);\n//   const [user, setUser] = useState({\n//     id: '',\n//     name: '',\n//     email: '',\n//     entries: 0,\n//     joined: '',\n//   });\n\n//   const app = new Clarifai.App({\n//     apiKey: 'd6186f1a010f48c98f651ef226062c3f',\n//   });\n\n//   const calculateFaceLocation = (data) => {\n//     const clarifaiFace =\n//       data.outputs[0].data.regions[0].region_info.bounding_box;\n//     const image = document.getElementById('inputimage');\n//     const width = Number(image.width);\n//     const height = Number(image.height);\n//     return {\n//       leftCol: clarifaiFace.left_col * width,\n//       topRow: clarifaiFace.top_row * height,\n//       rightCol: width - clarifaiFace.right_col * width,\n//       bottomRow: height - clarifaiFace.bottom_row * height,\n//     };\n//   };\n\n//   const loadUser = (data) => {\n//     setUser({\n//       id: data.id,\n//       name: data.name,\n//       email: data.email,\n//       entries: data.entries,\n//       joined: data.joined,\n//     });\n//   };\n\n//   const displayFaceBox = (box) => {\n//     setBox(box);\n//   };\n\n//   const onInputChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const onButtonClick = () => {\n//     setImageUrl(input);\n//     app.models\n//       .predict(Clarifai.FACE_DETECT_MODEL, input)\n//       .then((response) => {\n//         if (response) {\n//           fetch('http://localhost:3000/image', {\n//             method: 'put',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({\n//               id: user.id,\n//             }),\n//           })\n//             .then((response) => response.json())\n//             .then((count) => {\n//               setUser(Object.assign(user, { entries: count }));\n//               console.log(user);\n//             });\n//         }\n//         displayFaceBox(calculateFaceLocation(response));\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   const onRouteChange = (route) => {\n//     if (route === 'signin') {\n//       setIsSignedIn(false);\n//     } else if (route === 'home') {\n//       setIsSignedIn(true);\n//     }\n//     setRoute(route);\n//   };\n\n//   return (\n//     <AppContext.Provider\n//       value={{\n//         input,\n//         imageUrl,\n//         onInputChange,\n//         onButtonClick,\n//         box,\n//         route,\n//         setRoute,\n//         onRouteChange,\n//         isSignedIn,\n//         user,\n//         loadUser,\n//       }}\n//     >\n//       {children}\n//     </AppContext.Provider>\n//   );\n// };\n\n// export const useGlobalContext = () => {\n//   return useContext(AppContext);\n// };\n\n// export default AppProvider;\n"]},"metadata":{},"sourceType":"module"}